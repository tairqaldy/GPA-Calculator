stages:
  - install_build
  - dockerize

cache:
  paths:
    - node_modules/

variables:
  NODE_ENV: "production"
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA  

install_&_build_dependencies:
  stage: install_build
  image: node:18  
  script:
    - npm install 
    - npm run build
  artifacts:
    paths:
      - node_modules/
      - dist/ 
  tags: 
    - atomic

dockerize_app:
  stage: dockerize
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cp -r dist/ ./nginx-html  
    - |
      cat <<EOF > Dockerfile
      # Use the official NGINX image
      FROM nginx:latest

      # Copy build output to NGINX HTML directory
      COPY ./nginx-html /usr/share/nginx/html

      # Expose port 80
      EXPOSE 80

      # Start NGINX
      CMD ["nginx", "-g", "daemon off;"]
      EOF
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
    - docker rm -f compass || true 
    - docker run -d --name compass -p 8085:80 $IMAGE_TAG
  only:
    - main  
  tags: 
    - atomic